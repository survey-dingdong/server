"""survey-dingdong

Revision ID: 26621970b947
Revises:
Create Date: 2024-05-10 00:00:00.535980

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "26621970b947"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("nickname", sa.String(length=255), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("nickname"),
    )
    op.create_index(op.f("ix_user_created_at"), "user", ["created_at"], unique=False)
    op.create_table(
        "workspace",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=20), nullable=False),
        sa.Column("order_no", sa.Integer(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_workspace_created_at"), "workspace", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_workspace_user_id"), "workspace", ["user_id"], unique=False
    )
    op.create_table(
        "experiment_project",
        sa.Column("start_date", sa.DATE(), nullable=True),
        sa.Column("end_date", sa.DATE(), nullable=True),
        sa.Column("excluded_dates", sa.JSON(), nullable=True),
        sa.Column(
            "experiment_type",
            sa.Enum("ONLINE", "OFFLINE", name="experimenttypeenum"),
            nullable=False,
        ),
        sa.Column("location", sa.String(length=255), nullable=True),
        sa.Column("participant_code", sa.String(length=4), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("workspace_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=20), nullable=False),
        sa.Column("description", sa.String(length=512), nullable=True),
        sa.Column("is_public", sa.Boolean(), nullable=False),
        sa.Column("joined_participants", sa.Integer(), nullable=False),
        sa.Column("max_participants", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["workspace_id"],
            ["workspace.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_experiment_project_created_at"),
        "experiment_project",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experiment_project_end_date"),
        "experiment_project",
        ["end_date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experiment_project_start_date"),
        "experiment_project",
        ["start_date"],
        unique=False,
    )
    op.create_table(
        "experiment_timeslot",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("experiment_project_id", sa.Integer(), nullable=False),
        sa.Column("start_time", sa.Time(), nullable=False),
        sa.Column("end_time", sa.Time(), nullable=False),
        sa.Column("max_participants", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["experiment_project_id"],
            ["experiment_project.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("experiment_project_id", "start_time", "end_time"),
    )
    op.create_index(
        op.f("ix_experiment_timeslot_created_at"),
        "experiment_timeslot",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experiment_timeslot_end_time"),
        "experiment_timeslot",
        ["end_time"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experiment_timeslot_start_time"),
        "experiment_timeslot",
        ["start_time"],
        unique=False,
    )
    op.create_table(
        "experiment_participant_timeslot",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("experiment_timeslot_id", sa.Integer(), nullable=False),
        sa.Column("experiment_date", sa.DATE(), nullable=False),
        sa.Column(
            "attendance_status",
            sa.Enum(
                "SCHEDULED",
                "NOT_ATTENDED",
                "ATTENDED",
                name="experimentattendancestatus",
            ),
            nullable=False,
        ),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["experiment_timeslot_id"],
            ["experiment_timeslot.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_experiment_participant_timeslot_created_at"),
        "experiment_participant_timeslot",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experiment_participant_timeslot_experiment_date"),
        "experiment_participant_timeslot",
        ["experiment_date"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_experiment_participant_timeslot_experiment_date"),
        table_name="experiment_participant_timeslot",
    )
    op.drop_index(
        op.f("ix_experiment_participant_timeslot_created_at"),
        table_name="experiment_participant_timeslot",
    )
    op.drop_table("experiment_participant_timeslot")
    op.drop_index(
        op.f("ix_experiment_timeslot_start_time"), table_name="experiment_timeslot"
    )
    op.drop_index(
        op.f("ix_experiment_timeslot_end_time"), table_name="experiment_timeslot"
    )
    op.drop_index(
        op.f("ix_experiment_timeslot_created_at"), table_name="experiment_timeslot"
    )
    op.drop_table("experiment_timeslot")
    op.drop_index(
        op.f("ix_experiment_project_start_date"), table_name="experiment_project"
    )
    op.drop_index(
        op.f("ix_experiment_project_end_date"), table_name="experiment_project"
    )
    op.drop_index(
        op.f("ix_experiment_project_created_at"), table_name="experiment_project"
    )
    op.drop_table("experiment_project")
    op.drop_index(op.f("ix_workspace_user_id"), table_name="workspace")
    op.drop_index(op.f("ix_workspace_created_at"), table_name="workspace")
    op.drop_table("workspace")
    op.drop_index(op.f("ix_user_created_at"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
